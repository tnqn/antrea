// Copyright 2020 Antrea Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.vmware_tanzu.antrea.pkg.apis.metrics.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// ClusterNetworkPolicyMetrics is the metrics of a ClusterNetworkPolicy.
message ClusterNetworkPolicyMetrics {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // The metrics of the ClusterNetworkPolicy.
  optional TrafficStats trafficStats = 2;
}

// ClusterNetworkPolicyMetricsList is a list of ClusterNetworkPolicyMetrics.
message ClusterNetworkPolicyMetricsList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // List of ClusterNetworkPolicyMetrics.
  repeated ClusterNetworkPolicyMetrics items = 2;
}

// NetworkPolicyMetrics is the metrics of a K8s NetworkPolicy.
message NetworkPolicyMetrics {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // The traffic stats of the K8s NetworkPolicy.
  optional TrafficStats trafficStats = 2;
}

// NetworkPolicyMetricsList is a list of NetworkPolicyMetrics.
message NetworkPolicyMetricsList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // List of NetworkPolicyMetrics.
  repeated NetworkPolicyMetrics items = 2;
}

// TrafficStats contains the traffic stats of a NetworkPolicy.
message TrafficStats {
  // Packets is the packets count hit by the NetworkPolicy.
  optional int64 packets = 1;

  // Bytes is the bytes count hit by the NetworkPolicy.
  optional int64 bytes = 2;

  // Sessions is the sessions count hit by the NetworkPolicy.
  optional int64 sessions = 3;
}

